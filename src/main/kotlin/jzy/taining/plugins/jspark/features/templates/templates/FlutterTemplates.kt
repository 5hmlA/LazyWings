package jzy.taining.plugins.jspark.features.templates.templates

// templates for flutter sparkj

fun jsparkFPage(name: String, bean: String) =
    """
import 'package:flutter/material.dart';
import 'package:jspark/jspark.dart';

import 'command_${name.toLowerCase()}.dart';

/**
 *  generated by jspark
 */
class ${name}Page extends SparkjPage<${name}Command, $bean> {
  final String param;

  ${name}Page(this.param);

  @override
  ${name}Command initControl() => ${name}Command(param);

  @override
  Widget showSucceed(BuildContext context, $bean result) {
    return Text("");
  }
}
    """

fun jsparkFCommander(name: String, bean: String) =
    """
import 'repo_${name.toLowerCase()}.dart';
import 'package:jspark/jspark.dart';

/**
 *  generated by jspark
 */
class ${name}Command extends SparkjCommand<$bean> {
  final String param;
  final ${name}Repo repo;

  ${name}Command(this.param, {this.repo = const ${name}RepoImpl()});

  @override
  Future<Result<$bean>> onPull() async => await ;
}
    """

fun jsparkFRepo(name: String) =
    """

/**
 *  generated by jspark
 */
abstract class ${name}Repo {
  const ${name}Repo();
}

class ${name}RepoImpl extends ${name}Repo {
  const ${name}RepoImpl();
}
    """